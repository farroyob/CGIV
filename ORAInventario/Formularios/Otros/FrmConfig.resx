<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="utm_Principal.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="fbd_ruta.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>238, 16</value>
  </metadata>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>335, 16</value>
  </metadata>
  <metadata name="fImagen.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>475, 16</value>
  </metadata>
</root>